{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction TravelsAPI(token) {\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [travels, setTravels] = useState([]);\n  const [callback, setCallback] = useState([]);\n  const [sort, setSort] = useState('');\n  const [start, setStart] = useState('');\n  const [end, setEnd] = useState('');\n  const [train, setTrain] = useState('');\n  const [page, setPage] = useState(1);\n  const [result, setResult] = useState(0);\n  const [userId, setUserId] = useState('');\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get('/user/infor', {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n          setUserId(res.data.Id);\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n  return {\n    travels: [travels, setTravels],\n    callback: [callback, setCallback],\n    sort: [sort, setSort],\n    start: [start, setStart],\n    end: [end, setEnd],\n    page: [page, setPage],\n    result: [result, setResult],\n    train: [train, setTrain],\n    userId\n  };\n}\n\nexport default TravelsAPI;","map":{"version":3,"sources":["E:/Academic/5th Sem/Project/RTS/client/src/api/TravelsAPI.js"],"names":["useState","useEffect","axios","TravelsAPI","token","isLogged","setIsLogged","isAdmin","setIsAdmin","travels","setTravels","callback","setCallback","sort","setSort","start","setStart","end","setEnd","train","setTrain","page","setPage","result","setResult","userId","setUserId","getUser","res","get","headers","Authorization","data","role","Id","err","alert","response","msg"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACvB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACiB,GAAD,EAAKC,MAAL,IAAelB,QAAQ,CAAC,EAAD,CAA7B;AACA,QAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACqB,IAAD,EAAOC,OAAP,IAAkBtB,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACuB,MAAD,EAASC,SAAT,IAAsBxB,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACyB,MAAD,EAASC,SAAT,IAAsB1B,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACX,QAAGG,KAAH,EAAS;AACL,YAAMuB,OAAO,GAAG,YAAW;AACvB,YAAI;AACA,gBAAMC,GAAG,GAAG,MAAM1B,KAAK,CAAC2B,GAAN,CAAU,aAAV,EAAyB;AACvCC,YAAAA,OAAO,EAAE;AAACC,cAAAA,aAAa,EAAE3B;AAAhB;AAD8B,WAAzB,CAAlB;AAIAE,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAsB,UAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,KAAkB,CAAlB,GAAsBzB,UAAU,CAAC,IAAD,CAAhC,GAAyCA,UAAU,CAAC,KAAD,CAAnD;AACAkB,UAAAA,SAAS,CAACE,GAAG,CAACI,IAAJ,CAASE,EAAV,CAAT;AAGH,SAVD,CAUE,OAAOC,GAAP,EAAY;AACVC,UAAAA,KAAK,CAACD,GAAG,CAACE,QAAJ,CAAaL,IAAb,CAAkBM,GAAnB,CAAL;AACH;AACJ,OAdD;;AAgBAX,MAAAA,OAAO;AAEV;AACJ,GArBQ,EAqBP,CAACvB,KAAD,CArBO,CAAT;AAuBA,SAAO;AACHK,IAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV,CADN;AAEHC,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX,CAFP;AAGHC,IAAAA,IAAI,EAAE,CAACA,IAAD,EAAOC,OAAP,CAHH;AAIHC,IAAAA,KAAK,EAAE,CAACA,KAAD,EAAQC,QAAR,CAJJ;AAKHC,IAAAA,GAAG,EAAE,CAACA,GAAD,EAAKC,MAAL,CALF;AAMHG,IAAAA,IAAI,EAAE,CAACA,IAAD,EAAOC,OAAP,CANH;AAOHC,IAAAA,MAAM,EAAE,CAACA,MAAD,EAASC,SAAT,CAPL;AAQHL,IAAAA,KAAK,EAAE,CAACA,KAAD,EAAQC,QAAR,CARJ;AASHK,IAAAA;AATG,GAAP;AAWH;;AAED,eAAetB,UAAf","sourcesContent":["import {useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction TravelsAPI(token) {\r\n    const [isLogged, setIsLogged] = useState(false)\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [travels, setTravels] = useState([])\r\n    const [callback, setCallback] = useState([])\r\n    const [sort, setSort] = useState('')\r\n    const [start, setStart] = useState('')\r\n    const [end,setEnd] = useState('')\r\n    const [train, setTrain] = useState('')\r\n    const [page, setPage] = useState(1)\r\n    const [result, setResult] = useState(0)\r\n    const [userId, setUserId] = useState('')\r\n\r\n    useEffect(() =>{\r\n        if(token){\r\n            const getUser = async () =>{\r\n                try {\r\n                    const res = await axios.get('/user/infor', {\r\n                        headers: {Authorization: token}\r\n                    })\r\n\r\n                    setIsLogged(true)\r\n                    res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false)\r\n                    setUserId(res.data.Id)\r\n                    \r\n                    \r\n                } catch (err) {\r\n                    alert(err.response.data.msg)\r\n                }\r\n            }\r\n\r\n            getUser()\r\n            \r\n        }\r\n    },[token])\r\n    \r\n    return {\r\n        travels: [travels, setTravels],\r\n        callback: [callback, setCallback],\r\n        sort: [sort, setSort],\r\n        start: [start, setStart],\r\n        end: [end,setEnd],\r\n        page: [page, setPage],\r\n        result: [result, setResult],\r\n        train: [train, setTrain],\r\n        userId\r\n    }\r\n}\r\n\r\nexport default TravelsAPI\r\n"]},"metadata":{},"sourceType":"module"}