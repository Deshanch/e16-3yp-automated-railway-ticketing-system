{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction UserAPI(token) {\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [userId, setUserId] = useState([]);\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get('/user/infor', {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          setUserId(res.data.Id);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n          const res1 = await axios.get('/api/travel/', {\n            headers: {\n              Authorization: token\n            }\n          });\n          console.log(res1.data);\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin],\n    userId: [userId, setUserId]\n  };\n}\n\nexport default UserAPI;","map":{"version":3,"sources":["E:/Academic/5th Sem/Project/RTS/client/src/api/UserAPI.js"],"names":["useState","useEffect","axios","UserAPI","token","isLogged","setIsLogged","isAdmin","setIsAdmin","userId","setUserId","getUser","res","get","headers","Authorization","data","Id","role","res1","console","log","err","alert","response","msg"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACX,QAAGG,KAAH,EAAS;AACL,YAAMO,OAAO,GAAG,YAAW;AACvB,YAAI;AACA,gBAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,aAAV,EAAyB;AACvCC,YAAAA,OAAO,EAAE;AAACC,cAAAA,aAAa,EAAEX;AAAhB;AAD8B,WAAzB,CAAlB;AAIAE,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAI,UAAAA,SAAS,CAACE,GAAG,CAACI,IAAJ,CAASC,EAAV,CAAT;AACAL,UAAAA,GAAG,CAACI,IAAJ,CAASE,IAAT,KAAkB,CAAlB,GAAsBV,UAAU,CAAC,IAAD,CAAhC,GAAyCA,UAAU,CAAC,KAAD,CAAnD;AAEA,gBAAMW,IAAI,GAAG,MAAMjB,KAAK,CAACW,GAAN,CAAU,cAAV,EAAyB;AACxCC,YAAAA,OAAO,EAAE;AAACC,cAAAA,aAAa,EAAEX;AAAhB;AAD+B,WAAzB,CAAnB;AAIAgB,UAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACH,IAAjB;AAEH,SAfD,CAeE,OAAOM,GAAP,EAAY;AACVC,UAAAA,KAAK,CAACD,GAAG,CAACE,QAAJ,CAAaR,IAAb,CAAkBS,GAAnB,CAAL;AACH;AACJ,OAnBD;;AAqBAd,MAAAA,OAAO;AAEV;AACJ,GA1BQ,EA0BP,CAACP,KAAD,CA1BO,CAAT;AA6BA,SAAO;AACHC,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX,CADP;AAEHC,IAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV,CAFN;AAGHC,IAAAA,MAAM,EAAE,CAACA,MAAD,EAASC,SAAT;AAHL,GAAP;AAKH;;AAED,eAAeP,OAAf","sourcesContent":["import {useState, useEffect} from 'react'\nimport axios from 'axios'\n\nfunction UserAPI(token) {\n    const [isLogged, setIsLogged] = useState(false)\n    const [isAdmin, setIsAdmin] = useState(false)\n    const [userId, setUserId] = useState([])\n\n    useEffect(() =>{\n        if(token){\n            const getUser = async () =>{\n                try {\n                    const res = await axios.get('/user/infor', {\n                        headers: {Authorization: token}\n                    })\n\n                    setIsLogged(true)\n                    setUserId(res.data.Id)\n                    res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false)\n\n                    const res1 = await axios.get('/api/travel/',{\n                        headers: {Authorization: token}\n                    })\n\n                    console.log(res1.data)\n\n                } catch (err) {\n                    alert(err.response.data.msg)\n                }\n            }\n\n            getUser()\n            \n        }\n    },[token])\n\n    \n    return {\n        isLogged: [isLogged, setIsLogged],\n        isAdmin: [isAdmin, setIsAdmin],\n        userId: [userId, setUserId]\n    }\n}\n\nexport default UserAPI\n "]},"metadata":{},"sourceType":"module"}