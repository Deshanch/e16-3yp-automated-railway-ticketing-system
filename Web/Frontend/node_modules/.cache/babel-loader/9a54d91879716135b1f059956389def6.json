{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction UserAPI(token) {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [cart, setCart] = useState([]);\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get('/user/infor', {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n\n  const addCart = async product => {\n    if (!isLogged) return alert(\"Please login to continue buying\");\n    const check = cart.every(item => {\n      console.log({\n        pro_id: product._id\n      });\n      console.log(item._id);\n      return item._id !== product._id;\n    });\n\n    if (check) {\n      console.log(\"Checked\");\n      setCart([...cart, { ...product,\n        quantity: 1\n      }]);\n    } else {\n      alert(\"This product has been added to cart.\");\n    }\n  };\n\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin],\n    addCart: addCart\n  };\n}\n\n_s(UserAPI, \"bRWEenHGuj23AV38AmLORPHuZ9g=\");\n\n_c = UserAPI;\nexport default UserAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAPI\");","map":{"version":3,"sources":["E:/Academic/My Path/E-commerce(MERN)/client/src/api/UserAPI.js"],"names":["React","useState","useEffect","axios","UserAPI","token","isLogged","setIsLogged","isAdmin","setIsAdmin","cart","setCart","getUser","res","get","headers","Authorization","data","role","err","alert","response","msg","addCart","product","check","every","item","console","log","pro_id","_id","quantity"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAK;AACX,QAAGG,KAAH,EAAS;AACL,YAAMO,OAAO,GAAG,YAAW;AACvB,YAAI;AACA,gBAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,aAAV,EAAyB;AACvCC,YAAAA,OAAO,EAAE;AAACC,cAAAA,aAAa,EAAEX;AAAhB;AAD8B,WAAzB,CAAlB;AAGAE,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAM,UAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,KAAkB,CAAlB,GAAsBT,UAAU,CAAC,IAAD,CAAhC,GAAyCA,UAAU,CAAC,KAAD,CAAnD;AAEH,SAPD,CAOE,OAAOU,GAAP,EAAY;AACVC,UAAAA,KAAK,CAACD,GAAG,CAACE,QAAJ,CAAaJ,IAAb,CAAkBK,GAAnB,CAAL;AACH;AACJ,OAXD;;AAYAV,MAAAA,OAAO;AACV;AACJ,GAhBQ,EAgBP,CAACP,KAAD,CAhBO,CAAT;;AAkBA,QAAMkB,OAAO,GAAG,MAAOC,OAAP,IAAkB;AAC9B,QAAG,CAAClB,QAAJ,EAAc,OAAOc,KAAK,CAAC,iCAAD,CAAZ;AAEd,UAAMK,KAAK,GAAGf,IAAI,CAACgB,KAAL,CAAWC,IAAI,IAAG;AAC5BC,MAAAA,OAAO,CAACC,GAAR,CAAY;AAACC,QAAAA,MAAM,EAAEN,OAAO,CAACO;AAAjB,OAAZ;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACI,GAAjB;AACA,aAAOJ,IAAI,CAACI,GAAL,KAAaP,OAAO,CAACO,GAA5B;AACH,KAJa,CAAd;;AAMA,QAAGN,KAAH,EAAS;AACLG,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAlB,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAU,EAAC,GAAGc,OAAJ;AAAaQ,QAAAA,QAAQ,EAAE;AAAvB,OAAV,CAAD,CAAP;AAEH,KAJD,MAIK;AACDZ,MAAAA,KAAK,CAAC,sCAAD,CAAL;AACH;AACJ,GAhBD;;AAkBA,SAAO;AACHd,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX,CADP;AAEHC,IAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV,CAFN;AAGHc,IAAAA,OAAO,EAAEA;AAHN,GAAP;AAKH;;GA9CQnB,O;;KAAAA,O;AAgDT,eAAeA,OAAf","sourcesContent":["import React ,{useState, useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction UserAPI(token) {\r\n    const [isLogged, setIsLogged] = useState(false)\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [cart, setCart] = useState([])\r\n\r\n    useEffect(() =>{\r\n        if(token){\r\n            const getUser = async () =>{\r\n                try {\r\n                    const res = await axios.get('/user/infor', {\r\n                        headers: {Authorization: token}\r\n                    })\r\n                    setIsLogged(true)\r\n                    res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false)\r\n\r\n                } catch (err) {\r\n                    alert(err.response.data.msg)\r\n                }\r\n            }\r\n            getUser()\r\n        }\r\n    },[token])\r\n\r\n    const addCart = async (product) =>{\r\n        if(!isLogged) return alert(\"Please login to continue buying\")\r\n\r\n        const check = cart.every(item =>{\r\n            console.log({pro_id: product._id})\r\n            console.log(item._id)\r\n            return item._id !== product._id\r\n        })\r\n\r\n        if(check){\r\n            console.log(\"Checked\")\r\n            setCart([...cart, {...product, quantity: 1}])\r\n\r\n        }else{\r\n            alert(\"This product has been added to cart.\")\r\n        }\r\n    }\r\n\r\n    return {\r\n        isLogged: [isLogged, setIsLogged],\r\n        isAdmin: [isAdmin, setIsAdmin],\r\n        addCart: addCart\r\n    }\r\n}\r\n\r\nexport default UserAPI\r\n"]},"metadata":{},"sourceType":"module"}