{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction UserAPI(token) {\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [travels, setTravels] = use;\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get('/user/infor', {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n          const res1 = await axios.get(`/api/travel/${res.data.Id}`, {\n            headers: {\n              Authorization: token\n            }\n          });\n          console.log(res1.data);\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin]\n  };\n}\n\nexport default UserAPI;","map":{"version":3,"sources":["E:/Academic/5th Sem/Project/RTS/client/src/api/UserAPI.js"],"names":["useState","useEffect","axios","UserAPI","token","isLogged","setIsLogged","isAdmin","setIsAdmin","travels","setTravels","use","getUser","res","get","headers","Authorization","data","role","res1","Id","console","log","err","alert","response","msg"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBC,GAA9B;AAEAV,EAAAA,SAAS,CAAC,MAAK;AACX,QAAGG,KAAH,EAAS;AACL,YAAMQ,OAAO,GAAG,YAAW;AACvB,YAAI;AACA,gBAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAU,aAAV,EAAyB;AACvCC,YAAAA,OAAO,EAAE;AAACC,cAAAA,aAAa,EAAEZ;AAAhB;AAD8B,WAAzB,CAAlB;AAIAE,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAO,UAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,KAAkB,CAAlB,GAAsBV,UAAU,CAAC,IAAD,CAAhC,GAAyCA,UAAU,CAAC,KAAD,CAAnD;AAEA,gBAAMW,IAAI,GAAG,MAAMjB,KAAK,CAACY,GAAN,CAAW,eAAcD,GAAG,CAACI,IAAJ,CAASG,EAAG,EAArC,EAAuC;AACtDL,YAAAA,OAAO,EAAE;AAACC,cAAAA,aAAa,EAAEZ;AAAhB;AAD6C,WAAvC,CAAnB;AAIAiB,UAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACF,IAAjB;AACH,SAbD,CAaE,OAAOM,GAAP,EAAY;AACVC,UAAAA,KAAK,CAACD,GAAG,CAACE,QAAJ,CAAaR,IAAb,CAAkBS,GAAnB,CAAL;AACH;AACJ,OAjBD;;AAmBAd,MAAAA,OAAO;AAEV;AACJ,GAxBQ,EAwBP,CAACR,KAAD,CAxBO,CAAT;AA2BA,SAAO;AACHC,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX,CADP;AAEHC,IAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV;AAFN,GAAP;AAIH;;AAED,eAAeL,OAAf","sourcesContent":["import {useState, useEffect} from 'react'\nimport axios from 'axios'\n\nfunction UserAPI(token) {\n    const [isLogged, setIsLogged] = useState(false)\n    const [isAdmin, setIsAdmin] = useState(false)\n    const [travels, setTravels] = use\n\n    useEffect(() =>{\n        if(token){\n            const getUser = async () =>{\n                try {\n                    const res = await axios.get('/user/infor', {\n                        headers: {Authorization: token}\n                    })\n\n                    setIsLogged(true)\n                    res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false)\n\n                    const res1 = await axios.get(`/api/travel/${res.data.Id}`,{\n                        headers: {Authorization: token}\n                    })\n\n                    console.log(res1.data)\n                } catch (err) {\n                    alert(err.response.data.msg)\n                }\n            }\n\n            getUser()\n            \n        }\n    },[token])\n\n    \n    return {\n        isLogged: [isLogged, setIsLogged],\n        isAdmin: [isAdmin, setIsAdmin]\n    }\n}\n\nexport default UserAPI\n "]},"metadata":{},"sourceType":"module"}